# Script para iniciar la base de datos PostgreSQL
# Ejecutar desde la ra√≠z del proyecto (donde est√° el docker-compose.yml)

Write-Host "üöÄ Iniciando base de datos PostgreSQL para Ticket Analytics..." -ForegroundColor Green

# Verificar si estamos en el directorio correcto
if (-not (Test-Path "docker-compose.yml")) {
    Write-Host "‚ùå Error: No se encontr√≥ docker-compose.yml. Ejecuta este script desde la ra√≠z del proyecto." -ForegroundColor Red
    exit 1
}

# Verificar si Docker est√° ejecut√°ndose
try {
    docker version | Out-Null
    Write-Host "‚úÖ Docker est√° ejecut√°ndose" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Error: Docker no est√° ejecut√°ndose. Por favor, inicia Docker Desktop." -ForegroundColor Red
    exit 1
}

# Construir e iniciar solo los servicios de base de datos
Write-Host "üì¶ Construyendo e iniciando servicios de base de datos..." -ForegroundColor Yellow
docker-compose up -d postgres pgadmin

# Esperar a que PostgreSQL est√© listo
Write-Host "‚è≥ Esperando a que PostgreSQL est√© listo..." -ForegroundColor Yellow
Start-Sleep -Seconds 15

# Verificar el estado de los servicios
Write-Host "üîç Verificando estado de los servicios..." -ForegroundColor Yellow
docker-compose ps postgres pgadmin

# Mostrar informaci√≥n de conexi√≥n
Write-Host ""
Write-Host "üìä Informaci√≥n de conexi√≥n:" -ForegroundColor Cyan
Write-Host "   Base de datos: ticket_analytics" -ForegroundColor White
Write-Host "   Usuario: ticket_user" -ForegroundColor White
Write-Host "   Contrase√±a: ticket_password" -ForegroundColor White
Write-Host "   Puerto: 5432" -ForegroundColor White
Write-Host "   PgAdmin: http://localhost:8080" -ForegroundColor White
Write-Host "   PgAdmin Email: admin@ticketanalytics.com" -ForegroundColor White
Write-Host "   PgAdmin Password: admin123" -ForegroundColor White

Write-Host ""
Write-Host "‚úÖ Base de datos iniciada correctamente!" -ForegroundColor Green 